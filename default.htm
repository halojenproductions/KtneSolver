<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>KTNE Solver</title>
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
			integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
		<style>
			* {
				font-family: Consolas, 'Courier New', Courier, monospace;
			}

			body {
				background-color: black;
			}

			.module {
				min-width: 350px;
			}


			input[type='text'],
			#passwd_solution {
				color: rgb(0, 255, 0) !important;
				text-transform: uppercase;
			}

			input[type='text']:focus {
				border-color: #00FF00;
				box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(0, 255, 0, 0.6);
			}

			input.btn-check:not(:checked)+.btn.colour-blue {
				color: #0d6efd;
			}

			input.btn-check:checked+.btn.colour-blue {
				background-color: #0d6efd;
			}

			input.btn-check:not(:checked)+.btn.colour-white {
				color: #f8f9fa;
			}

			input.btn-check:checked+.btn.colour-white {
				background-color: #adb5bd;
			}

			input.btn-check:not(:checked)+.btn.colour-yellow {
				color: #ffc107;
			}

			input.btn-check:checked+.btn.colour-yellow {
				background-color: #ffc107;
			}

			input.btn-check:not(:checked)+.btn.colour-red {
				color: #dc3545;
			}

			input.btn-check:checked+.btn.btn.colour-red {
				background-color: #dc3545;
			}

			.btn-group-sm {
				margin-top: 6px;
				/*TODO : better solution to spacing*/
			}

			.btn-label {
				min-width: 70px;
				/*TODO : innapropriately using button style for label but i thought it looked clean, ideally would disable rollover style and better solution for uniform sizing*/
			}
		</style>
	</head>

	<body onload="setup()">
		<div class="container-fluid">
			<div class="row align-items-start">
				<div class="col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark position-sticky top-0 start-0">
					<div class="d-flex flex-column align-items-left align-items-sm-start px-3 pt-2  min-vh-100">
						<p>
							Version: 1<br>
							Verification Code: 241
						</p>
						<ul class="nav nav-pills flex-column mb-auto">
							<li class="nav-item">
								<a class="nav-link" href="#MissileButton">Button</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" href="#BasicWires">Basic wires</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" href="#Password">Password</a>
							</li>
						</ul>
					</div>
				</div>

				<div class="col  ">
					<div class="row ">
						<div class="col-12 pt-3 ">
							<!-- <div class=" w-100 "> -->
							<h3>Keep Talking and Nobody Explodes</h3>
							<!-- </div> -->
						</div>
					</div>
					<div class="row  ">
						<div class="col module pt-3" id="MissileButton">
							<div class="card">
								<div class="card-header ">
									Button
								</div>
								<div class="card-body " id="">

									<div class="btn-group-vertical align-top" role="group">
										<input type="radio" class="btn-check" name="button_word" id="button_word1" autocomplete="off">
										<label class="btn btn-outline-primary" for="button_word1">Abort</label>

										<input type="radio" class="btn-check" name="button_word" id="button_word2" autocomplete="off">
										<label class="btn btn-outline-primary" for="button_word2">Detonate</label>

										<input type="radio" class="btn-check" name="button_word" id="button_word3" autocomplete="off">
										<label class="btn btn-outline-primary" for="button_word3">Hold</label>
									</div>

									<div class="btn-group-vertical" role="group">
										<input type="radio" class="btn-check blue" name="button_colour" id="button_colour1" autocomplete="off">
										<label class="btn btn-outline-primary colour-blue" for="button_colour1">Blue</label>

										<input type="radio" class="btn-check" name="button_colour" id="button_colour2" autocomplete="off">
										<label class="btn btn-outline-primary colour-white" for="button_colour2">White</label>

										<input type="radio" class="btn-check" name="button_colour" id="button_colour3" autocomplete="off">
										<label class="btn btn-outline-primary colour-yellow" for="button_colour3">Yellow</label>

										<input type="radio" class="btn-check" name="button_colour" id="button_colour4" autocomplete="off">
										<label class="btn btn-outline-primary colour-red" for="button_colour4">Red</label>
									</div>

									<div class="input-group-vertical" id="button_batteries">

									</div>
								</div>
							</div>
						</div>

						<div class="col module pt-3" id="BasicWires"> <!--TODO: create a loop for generating these buttons instead of spamming lines of repeating elements-->
							<div class="card">
								<div class="card-header ">
									Basic wires
								</div>
								<div class="card-body" id="">
									<div class="btn-group-vertical btn-group-sm" role="group">
										<label class="btn btn-outline-danger btn-label">Red</label>

										<input type="radio" class="btn-check" name="basicwires_red" id="basicwires_red0" autocomplete="off" value=0>
										<label class="btn btn-outline-danger" for="basicwires_red0">0</label>

										<input type="radio" class="btn-check" name="basicwires_red" id="basicwires_red1" autocomplete="off" value=1>
										<label class="btn btn-outline-danger" for="basicwires_red1">1</label>

										<input type="radio" class="btn-check" name="basicwires_red" id="basicwires_red2" autocomplete="off" value=2>
										<label class="btn btn-outline-danger" for="basicwires_red2">2</label>

										<input type="radio" class="btn-check" name="basicwires_red" id="basicwires_red3" autocomplete="off" value=3>
										<label class="btn btn-outline-danger" for="basicwires_red3">3</label>

										<input type="radio" class="btn-check" name="basicwires_red" id="basicwires_red4" autocomplete="off" value=4>
										<label class="btn btn-outline-danger" for="basicwires_red4">4</label>

										<input type="radio" class="btn-check" name="basicwires_red" id="basicwires_red5" autocomplete="off" value=5>
										<label class="btn btn-outline-danger" for="basicwires_red5">5</label>

										<input type="radio" class="btn-check" name="basicwires_red" id="basicwires_red6" autocomplete="off" value=6>
										<label class="btn btn-outline-danger" for="basicwires_red6">6</label>
									</div>

									<div class="btn-group-vertical  btn-group-sm" role="group">
										<label class="btn btn-outline-primary btn-label">Blue</label>

										<input type="radio" class="btn-check" name="basicwires_blue" id="basicwires_blue0" autocomplete="off" value=0>
										<label class="btn btn-outline-primary" for="basicwires_blue0">0</label>

										<input type="radio" class="btn-check" name="basicwires_blue" id="basicwires_blue1" autocomplete="off" value=1>
										<label class="btn btn-outline-primary" for="basicwires_blue1">1</label>

										<input type="radio" class="btn-check" name="basicwires_blue" id="basicwires_blue2" autocomplete="off" value=2>
										<label class="btn btn-outline-primary" for="basicwires_blue2">2</label>

										<input type="radio" class="btn-check" name="basicwires_blue" id="basicwires_blue3" autocomplete="off" value=3>
										<label class="btn btn-outline-primary" for="basicwires_blue3">3</label>

										<input type="radio" class="btn-check" name="basicwires_blue" id="basicwires_blue4" autocomplete="off" value=4>
										<label class="btn btn-outline-primary" for="basicwires_blue4">4</label>

										<input type="radio" class="btn-check" name="basicwires_blue" id="basicwires_blue5" autocomplete="off" value=5>
										<label class="btn btn-outline-primary" for="basicwires_blue5">5</label>

										<input type="radio" class="btn-check" name="basicwires_blue" id="basicwires_blue6" autocomplete="off" value=6>
										<label class="btn btn-outline-primary" for="basicwires_blue6">6</label>
									</div>

									<div class="btn-group-vertical  btn-group-sm" role="group">
										<label class="btn btn-outline-warning btn-label">Yellow</label>

										<input type="radio" class="btn-check" name="basicwires_yellow" id="basicwires_yellow0" autocomplete="off" value=0>
										<label class="btn btn-outline-warning" for="basicwires_yellow0">0</label>

										<input type="radio" class="btn-check" name="basicwires_yellow" id="basicwires_yellow1" autocomplete="off" value=1>
										<label class="btn btn-outline-warning" for="basicwires_yellow1">1</label>

										<input type="radio" class="btn-check" name="basicwires_yellow" id="basicwires_yellow2" autocomplete="off" value=2>
										<label class="btn btn-outline-warning" for="basicwires_yellow2">2</label>

										<input type="radio" class="btn-check" name="basicwires_yellow" id="basicwires_yellow3" autocomplete="off" value=3>
										<label class="btn btn-outline-warning" for="basicwires_yellow3">3</label>

										<input type="radio" class="btn-check" name="basicwires_yellow" id="basicwires_yellow4" autocomplete="off" value=4>
										<label class="btn btn-outline-warning" for="basicwires_yellow4">4</label>

										<input type="radio" class="btn-check" name="basicwires_yellow" id="basicwires_yellow5" autocomplete="off" value=5>
										<label class="btn btn-outline-warning" for="basicwires_yellow5">5</label>

										<input type="radio" class="btn-check" name="basicwires_yellow" id="basicwires_yellow6" autocomplete="off" value=6>
										<label class="btn btn-outline-warning" for="basicwires_yellow6">6</label>
									</div>

									<div class="btn-group-vertical  btn-group-sm" role="group">
										<label class="btn btn-outline-secondary btn-label">Black</label>

										<input type="radio" class="btn-check" name="basicwires_black" id="basicwires_black0" autocomplete="off" value=0>
										<label class="btn btn-outline-secondary" for="basicwires_black0">0</label>

										<input type="radio" class="btn-check" name="basicwires_black" id="basicwires_black1" autocomplete="off" value=1>
										<label class="btn btn-outline-secondary" for="basicwires_black1">1</label>

										<input type="radio" class="btn-check" name="basicwires_black" id="basicwires_black2" autocomplete="off" value=2>
										<label class="btn btn-outline-secondary" for="basicwires_black2">2</label>

										<input type="radio" class="btn-check" name="basicwires_black" id="basicwires_black3" autocomplete="off" value=3>
										<label class="btn btn-outline-secondary" for="basicwires_black3">3</label>

										<input type="radio" class="btn-check" name="basicwires_black" id="basicwires_black4" autocomplete="off" value=4>
										<label class="btn btn-outline-secondary" for="basicwires_black4">4</label>

										<input type="radio" class="btn-check" name="basicwires_black" id="basicwires_black5" autocomplete="off" value=5>
										<label class="btn btn-outline-secondary" for="basicwires_black5">5</label>

										<input type="radio" class="btn-check" name="basicwires_black" id="basicwires_black6" autocomplete="off" value=6>
										<label class="btn btn-outline-secondary" for="basicwires_black6">6</label>
									</div>

									<div class="btn-group-vertical  btn-group-sm" role="group">
										<label class="btn btn-outline-light btn-label">White</label>

										<input type="radio" class="btn-check" name="basicwires_white" id="basicwires_white0" autocomplete="off" value=0>
										<label class="btn btn-outline-light" for="basicwires_white0">0</label>

										<input type="radio" class="btn-check" name="basicwires_white" id="basicwires_white1" autocomplete="off" value=1>
										<label class="btn btn-outline-light" for="basicwires_white1">1</label>

										<input type="radio" class="btn-check" name="basicwires_white" id="basicwires_white2" autocomplete="off" value=2>
										<label class="btn btn-outline-light" for="basicwires_white2">2</label>

										<input type="radio" class="btn-check" name="basicwires_white" id="basicwires_white3" autocomplete="off" value=3>
										<label class="btn btn-outline-light" for="basicwires_white3">3</label>

										<input type="radio" class="btn-check" name="basicwires_white" id="basicwires_white4" autocomplete="off" value=4>
										<label class="btn btn-outline-light" for="basicwires_white4">4</label>

										<input type="radio" class="btn-check" name="basicwires_white" id="basicwires_white5" autocomplete="off" value=5>
										<label class="btn btn-outline-light" for="basicwires_white5">5</label>

										<input type="radio" class="btn-check" name="basicwires_white" id="basicwires_white6" autocomplete="off" value=6>
										<label class="btn btn-outline-light" for="basicwires_white6">6</label>
									</div>

									<div class="btn-group  btn-group-sm" role="group">
										<label class="btn btn-outline-light btn-label">Last wire</label>

										<input type="radio" class="btn-check" name="basicwires_last" id="basicwires_lastblue" autocomplete="off" value="red">
										<label class="btn btn-outline-danger" for="basicwires_lastblue">Red</label>

										<input type="radio" class="btn-check" name="basicwires_last" id="basicwires_lastred" autocomplete="off" value="blue">
										<label class="btn btn-outline-primary" for="basicwires_lastred">Blu</label>

										<input type="radio" class="btn-check" name="basicwires_last" id="basicwires_lastyellow" autocomplete="off" value="yellow">
										<label class="btn btn-outline-warning" for="basicwires_lastyellow">Yel</label>

										<input type="radio" class="btn-check" name="basicwires_last" id="basicwires_lastblack" autocomplete="off" value="black">
										<label class="btn btn-outline-secondary" for="basicwires_lastblack">Bla</label>

										<input type="radio" class="btn-check" name="basicwires_last" id="basicwires_lastwhite" autocomplete="off" value="white">
										<label class="btn btn-outline-light" for="basicwires_lastwhite">Whi</label>
									</div>

									<div class="btn-group  btn-group-sm" role="group">
										<label class="btn btn-outline-light btn-label">Is last serial digit odd?</label>

										<input type="radio" class="btn-check" name="button_serial" id="button_serial1" autocomplete="off" value=true>
										<label class="btn btn-outline-light" for="button_serial1">Yes</label>

										<input type="radio" class="btn-check" name="button_serial" id="button_serial0" autocomplete="off" value=false>
										<label class="btn btn-outline-light" for="button_serial0">No</label>
									</div>
									<hr>
									<div>
										<input type="button" onclick="basicwires_solve(this)" value="Solve" />
										<div id="rWires"> </div>
									</div>
								</div>
							</div>
						</div>

						<div class="col module pt-3" id="BasicWires2">
							<div class="card">
								<div class="card-header ">
									Basic wires 2
								</div>
								<div class="card-body" id="basicwires2_inputs">

									<script type="text/javascript">

										var basicwires2_inputs = document.getElementById("basicwires2_inputs");
										var colours = [["Red", "red"], ["Blue", "blue"], ["Yellow", "yellow"], ["Black", "black"], ["White", "white"]];

										for (i = 1; i <= 6; i++) {
											var group = document.createElement("div");
											group.className = "btn-group btn-group-sm d-flex";
											group.setAttribute("role", "group");

											// var label = document.createElement("label");
											// label.className = `btn-label`;
											// label.appendChild(document.createTextNode(`Wire ${i}`));
											// group.appendChild(label);

											for (ii = 0; ii < 5; ii++) {
												var input = document.createElement("input");
												input.id = `basicwires2_${i}_${ii}`;
												input.className = "btn-check";
												input.setAttribute("type", "radio");
												input.setAttribute("name", `basicwires2_${i}`);
												input.setAttribute("autocomplete", "off");

												var label = document.createElement("label");
												label.className = `btn btn-outline-primary flex-grow-1 colour-${colours[ii][1]}`;
												label.setAttribute("for", `basicwires2_${i}_${ii}`);
												label.appendChild(document.createTextNode(`${colours[ii][0]}`));

												group.appendChild(input);
												group.appendChild(label);
											}

											basicwires2_inputs.appendChild(group);
										}

									</script>

									<div class="clearfix"></div>


									<div class="btn-group  btn-group-sm" role="group">
										<input type="radio" class="btn-check" name="basicwires2_serial" id="basicwires2_serial0" autocomplete="off" value=false>
										<label class="btn btn-outline-primary" for="basicwires2_serial0">Even</label>

										<input type="radio" class="btn-check" name="basicwires2_serial" id="basicwires2_serial1" autocomplete="off" value=true>
										<label class="btn btn-outline-primary" for="basicwires2_serial1">Odd</label>
									</div>
									<hr>
									<!-- <div>
										<input type="button" onclick="basicwires_solve(this)" value="Solve" />
									</div> -->
									<div id="rWires"> </div>
								</div>
							</div>
						</div>

						<div class="col module pt-3" id="Password">
							<div class="card">
								<div class="card-header ">
									Password
								</div>
								<div class="card-body ">
									<div class="input-group">
										<input id="passwd_letters1" placeholder="1" type="text" onkeyup="passwd_solve()"
											class="possible form-control" />
										<input id="passwd_letters2" placeholder="2" type="text" onkeyup="passwd_solve()"
											class="possible form-control" />
										<input id="passwd_letters3" placeholder="3" type="text" onkeyup="passwd_solve()"
											class="possible form-control" />
										<input id="passwd_letters4" placeholder="4" type="text" onkeyup="passwd_solve()"
											class="possible form-control" />
										<input id="passwd_letters5" placeholder="5" type="text" onkeyup="passwd_solve()"
											class="possible form-control" />
									</div>
									<hr>
									<div id="divSolution">
										<span id="passwd_solution"> </span>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>



		<script>
			function setup() {
				Array.from(document.getElementsByClassName('possible')).forEach(element => {
					element.addEventListener('keypress', passwd_jump);
				});

				// Missile buttons deselectable.
				Array.from(document.querySelectorAll('.btn-group-vertical .btn')).forEach(element => {
					element.addEventListener('click', buttonDeselect);
				});

				// Basic wires deselectable.
				Array.from(document.querySelectorAll('#basicwires2_inputs .btn')).forEach(element => {
					element.addEventListener('click', buttonDeselect);
				});

				//wire buttons cannot be null, must have default and no deselect option. 
				document.getElementById("basicwires_red0").checked = true;
				document.getElementById("basicwires_blue0").checked = true;
				document.getElementById("basicwires_yellow0").checked = true;
				document.getElementById("basicwires_black0").checked = true;
				document.getElementById("basicwires_white0").checked = true;
				document.getElementById("button_serial1").checked = true;
				document.getElementById("basicwires_lastblue").checked = true;


			}


			const lookups = [
				'about', 'after', 'again', 'below', 'could',
				'every', 'first', 'found', 'great', 'house',
				'large', 'learn', 'never', 'other', 'place',
				'plant', 'point', 'right', 'small', 'sound',
				'spell', 'still', 'study', 'their', 'there',
				'these', 'thing', 'think', 'three', 'water',
				'where', 'which', 'world', 'would', 'write'
			];

			function passwd_solve(e) { //Rename to sPassords or something?
				var inputs = [
					document.getElementById("passwd_letters1").value.toLowerCase().split(''),
					document.getElementById("passwd_letters2").value.toLowerCase().split(''),
					document.getElementById("passwd_letters3").value.toLowerCase().split(''),
					document.getElementById("passwd_letters4").value.toLowerCase().split(''),
					document.getElementById("passwd_letters5").value.toLowerCase().split('')
				];
				let matches = lookups.filter(lookupWord => {
					let wordLetters = lookupWord.split('');

					let hasMatch = true;
					for (var i = 0; i < 5; i++) { //I've been drinking but could you replace '5' condition with inputs[i].length and remove the === 0 below? SM
						hasMatch &&= inputs[i].length === 0 || inputs[i].includes(wordLetters[i]);
					}
					return hasMatch;

				});

				document.getElementById("passwd_solution").innerHTML = matches.join('<br>'); //Rename as there should be many solutions. rPasswords?
				console.log(matches);
			}

			function basicwires_solve(e) {

				let redWires = Number(document.querySelector('input[name="basicwires_red"]:checked').value),
					blueWires = Number(document.querySelector('input[name="basicwires_blue"]:checked').value),
					yellowWires = Number(document.querySelector('input[name="basicwires_yellow"]:checked').value),
					blackWires = Number(document.querySelector('input[name="basicwires_black"]:checked').value),
					whiteWires = Number(document.querySelector('input[name="basicwires_white"]:checked').value),
					serial = Boolean(document.querySelector('input[name="button_serial"]:checked').value),
					lastwire = document.querySelector('input[name="basicwires_last"]:checked').value;

				let totalcount = redWires + blueWires + yellowWires + blackWires + whiteWires;

				var white = "white", yellow = "yellow", blue = "blue", red = "red", black = "black",
					last = "last", first = "first", second = "2nd", fourth = "4th", third = "3rd";

				let result = "";

				switch (totalcount) {
					case 3:
						{
							if (redWires == 0) {
								result = second;
								break;
							}
							if (lastwire == white) {
								result = last;
								break;
							}
							if (blueWires > 1) {
								result = last + " " + blue;
								break;
							}
							result = last;
							break;
						}
					case 4:
						{
							if (redWires > 1 && serial) {
								result = last + " " + red;
								break;
							}
							if (lastwire == yellow && redWire == 0) {
								result = first;
								break;
							}
							if (blueWires == 1) {
								result = first;
								break;
							}
							if (yellowWires > 1) {
								result = last;
								break;
							}
							result = second;
							break;
						}
					case 5:
						{
							if (lastwire == black && serial) {
								result = fourth;
								break;
							}
							if (redWires == 1 && yellowWires > 1) {
								result = first;
								break;
							}
							if (blackWires == 0) {
								result = second;
								break;
							}
							result = first;
							break;
						}
					case 6:
						{
							if (yellowWires == 0 && serial) {
								result = third;
								break;
							}
							if (yellowWires == 1 && whiteWires > 1) {
								result = fourth;
								break;
							}
							if (redWires == 0) {
								result = last;
								break;
							}

							result = fourth;
							break;
						}
					default:
						result = "Invalid input";
						break;
				}

				document.getElementById("rWires").innerHTML = "Total wires: " + totalcount + ". Cut the " + result + " wire.";
			}


			function passwd_jump(e) { //This is specific to the password solver? Should be fine for now but if there are additional text inputs this may need context.
				if ("1234567890".includes(e.key)) {
					e.preventDefault();
					e.stopPropagation();
				}
				if ("12345".includes(e.key)) {
					document.getElementById(`passwd_letters${e.key}`).focus();
				}
			}

			function buttonDeselect(e) {
				if (document.getElementById(e.target.htmlFor).checked) {
					document.getElementById(e.target.htmlFor).checked = false;
					e.preventDefault();
				}
			}

		</script>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
			integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
			crossorigin="anonymous"></script>
		<script src="https://cdn.jsdelivr.net/npm/less"></script>
	</body>

</html>