<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>KTNE Solver</title>
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
			integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
		<style>
			* {
				font-family: Consolas, 'Courier New', Courier, monospace;
			}

			body {
				background-color: black;
			}

			.module {
				min-width: 350px;

			}


			input[type='text'],
			#solution {
				color: rgb(0, 255, 0) !important;
				text-transform: uppercase;
			}

			input[type='text']:focus {
				border-color: #00FF00;
				box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(0, 255, 0, 0.6);
			}
		</style>
	</head>

	<body onload="setup()">
		<div class="container-fluid">
			<div class="row align-items-start">
				<div class="col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark">
					<div class="d-flex flex-column align-items-left align-items-sm-start px-3 pt-2  min-vh-100">
						<p>
							Version: 1<br>
							Verification Code: 241
						</p>
						<ul class="nav nav-pills flex-column mb-auto">


							<li class="nav-item">
								<a class="nav-link" href="#PasswordSolver">Password</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" href="#MissileButton">Button</a>
							</li>
						</ul>
					</div>
				</div>

				<div class="col">
					<div class="row ">
						<div class=" pt-3 w-100">
							<h3>Keep Talking and Nobody Explodes</h3>


						</div>

						<div class="col module pt-3" id="MissileButton">
							<div class="card">
								<div class="card-header " id="possibles">
									Button
								</div>
								<div class="card-body" id="">
									This is the missile button module
								</div>
							</div>
						</div>


						<div class="col module pt-3">
							<div class="card">
								<div class="card-header " id="possibles">
									Another type of module
								</div>
								<div class="card-body" id="">
									this is another module
								</div>
							</div>
						</div>


						<div class="col module pt-3" id="PasswordSolver">
							<div class="card">
								<div class="card-header " id="possibles">
									Passwords
								</div>
								<div class="card-body ">
									<div class="input-group">
										<input id="letters1" placeholder="1" type="text" onkeyup="solve()"
											class="possible form-control" />
										<input id="letters2" placeholder="2" type="text" onkeyup="solve()"
											class="possible form-control" />
										<input id="letters3" placeholder="3" type="text" onkeyup="solve()"
											class="possible form-control" />
										<input id="letters4" placeholder="4" type="text" onkeyup="solve()"
											class="possible form-control" />
										<input id="letters5" placeholder="5" type="text" onkeyup="solve()"
											class="possible form-control" />
									</div>
									<hr>
									<div id="divSolution">
										<span id="solution"> </span>
									</div>
								</div>
							</div>
						</div>


					</div>
				</div>
			</div>
		</div>



		<script>
			function setup() {
				Array.from(document.getElementsByClassName('possible')).forEach(element => {
					element.addEventListener('keypress', jump);
				});
			}

			const lookups = [
				'about', 'after', 'again', 'below', 'could',
				'every', 'first', 'found', 'great', 'house',
				'large', 'learn', 'never', 'other', 'place',
				'plant', 'point', 'right', 'small', 'sound',
				'spell', 'still', 'study', 'their', 'there',
				'these', 'thing', 'think', 'three', 'water',
				'where', 'which', 'world', 'would', 'write'
			];

			function solve(e) {
				var inputs = [
					document.getElementById("letters1").value.split(''),
					document.getElementById("letters2").value.split(''),
					document.getElementById("letters3").value.split(''),
					document.getElementById("letters4").value.split(''),
					document.getElementById("letters5").value.split('')
				];
				let matches = lookups.filter(lookupWord => {
					let wordLetters = lookupWord.split('');

					let hasMatch = true;
					for (var i = 0; i < 5; i++) {
						hasMatch &&= inputs[i].length === 0 || inputs[i].includes(wordLetters[i]);
					}
					return hasMatch;

				});

				document.getElementById("solution").innerHTML = matches.join('<br>')/*.toUpperCase()*/;
				console.log(matches);
			}

			function jump(e) {
				if ("1234567890".includes(e.key)) {
					e.preventDefault();
					e.stopPropagation();
				}
				if ("12345".includes(e.key)) {
					document.getElementById("letters" + e.key).focus();
				}
			}
		</script>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
			integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
			crossorigin="anonymous"></script>
	</body>

</html>